.\" Automatically generated by Pod::Man 2.27 (Pod::Simple 3.28)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "Mail::SpamAssassin::Plugin::DCC 3"
.TH Mail::SpamAssassin::Plugin::DCC 3 "2011-06-07" "perl v5.18.1" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Mail::SpamAssassin::Plugin::DCC \- perform DCC check of messages
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&  loadplugin     Mail::SpamAssassin::Plugin::DCC
\&
\&  full DCC_CHECK        eval:check_dcc()
\&  full DCC_CHECK_50_79  eval:check_dcc_reputation_range(\*(Aq50\*(Aq,\*(Aq79\*(Aq)
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
The \s-1DCC\s0 or Distributed Checksum Clearinghouse is a system of servers
collecting and counting checksums of millions of mail messages.
TheSpamAssassin.pm counts can be used by SpamAssassin to detect and
reject or filter spam.
.PP
Because simplistic checksums of spam can be easily defeated, the main
\&\s-1DCC\s0 checksums are fuzzy and ignore aspects of messages.  The fuzzy
checksums are changed as spam evolves.
.PP
Note that \s-1DCC\s0 is disabled by default in \f(CW\*(C`init.pre\*(C'\fR because it is not
open source.  See the \s-1DCC\s0 license for more details.
.PP
See http://www.rhyolite.com/anti\-spam/dcc/ for more information about
\&\s-1DCC.\s0
.SH "TAGS"
.IX Header "TAGS"
The following tags are added to the set, available for use in reports,
header fields, other plugins, etc.:
.PP
.Vb 3
\&  _DCCB_    DCC server ID in a response
\&  _DCCR_    response from DCC \- header field body in X\-DCC\-*\-Metrics
\&  _DCCREP_  response from DCC \- DCC reputation in percents (0..100)
.Ve
.PP
Tag _DCCREP_ provides a nonempty value only with commercial \s-1DCC\s0 systems.
This is the percentage of spam vs. ham sent from the first untrusted relay.
.SH "USER OPTIONS"
.IX Header "USER OPTIONS"
.IP "use_dcc (0|1)		(default: 1)" 4
.IX Item "use_dcc (0|1) (default: 1)"
Whether to use \s-1DCC,\s0 if it is available.
.IP "dcc_body_max \s-1NUMBER\s0" 4
.IX Item "dcc_body_max NUMBER"
.PD 0
.IP "dcc_fuz1_max \s-1NUMBER\s0" 4
.IX Item "dcc_fuz1_max NUMBER"
.IP "dcc_fuz2_max \s-1NUMBER\s0" 4
.IX Item "dcc_fuz2_max NUMBER"
.PD
This option sets how often a message's body/fuz1/fuz2 checksum must have been
reported to the \s-1DCC\s0 server before SpamAssassin will consider the \s-1DCC\s0 check as
matched.
.Sp
As nearly all \s-1DCC\s0 clients are auto-reporting these checksums, you should set
this to a relatively high value, e.g. \f(CW999999\fR (this is \s-1DCC\s0's \s-1MANY\s0 count).
.Sp
The default is \f(CW999999\fR for all these options.
.IP "dcc_rep_percent \s-1NUMBER\s0" 4
.IX Item "dcc_rep_percent NUMBER"
Only commercial \s-1DCC\s0 systems provide \s-1DCC\s0 reputation information. This is the
percentage of spam vs. ham sent from the first untrusted relay.  It will hit
on new spam from spam sources.  Default is \f(CW90\fR.
.SH "ADMINISTRATOR OPTIONS"
.IX Header "ADMINISTRATOR OPTIONS"
.IP "dcc_timeout n		(default: 8)" 4
.IX Item "dcc_timeout n (default: 8)"
How many seconds you wait for \s-1DCC\s0 to complete, before scanning continues
without the \s-1DCC\s0 results.
.IP "dcc_home \s-1STRING\s0" 4
.IX Item "dcc_home STRING"
This option tells SpamAssassin where to find the dcc homedir.
If not given, it will try to get dcc to specify one, and if that fails it
will try dcc's own default homedir of '/var/dcc'.
If \f(CW\*(C`dcc_path\*(C'\fR is not specified, it will default to looking in
\&\f(CW\*(C`dcc_home/bin\*(C'\fR for dcc client instead of relying on SpamAssassin to find it
in the current \s-1PATH. \s0 If it isn't found there, it will look in the current
\&\s-1PATH.\s0 If a \f(CW\*(C`dccifd\*(C'\fR socket is found in \f(CW\*(C`dcc_home\*(C'\fR or specified explicitly,
it will use that interface instead of \f(CW\*(C`dccproc\*(C'\fR.
.IP "dcc_dccifd_path \s-1STRING\s0" 4
.IX Item "dcc_dccifd_path STRING"
This option tells SpamAssassin where to find the dccifd socket. If
\&\f(CW\*(C`dcc_dccifd_path\*(C'\fR is not specified, it will default to looking for a socket
named \f(CW\*(C`dccifd\*(C'\fR in a directory \f(CW\*(C`dcc_home\*(C'\fR.  The \f(CW\*(C`dcc_dccifd_path\*(C'\fR can be
a Unix socket name (absolute path), or an \s-1INET\s0 socket specification in a form
\&\f(CW\*(C`[host]:port\*(C'\fR or \f(CW\*(C`host:port\*(C'\fR, where a host can be an IPv4 or IPv6 address
or a host name, and port is a \s-1TCP\s0 port number. In case of an IPv6 address the
brackets are required syntax. If a \f(CW\*(C`dccifd\*(C'\fR socket is found, the plugin will
use it instead of \f(CW\*(C`dccproc\*(C'\fR.
.IP "dcc_path \s-1STRING\s0" 4
.IX Item "dcc_path STRING"
This option tells SpamAssassin specifically where to find the \f(CW\*(C`dccproc\*(C'\fR
client instead of relying on SpamAssassin to find it in the current \s-1PATH.\s0
Note that if \fItaint mode\fR is enabled in the Perl interpreter, you should
use this, as the current \s-1PATH\s0 will have been cleared.
.IP "dcc_options options" 4
.IX Item "dcc_options options"
Specify additional options to the \fIdccproc\fR\|(8) command. Please note that only
characters in the range [0\-9A\-Za\-z ,._/\-] are allowed for security reasons.
.Sp
The default is \f(CW\*(C`undef\*(C'\fR.
.IP "dccifd_options options" 4
.IX Item "dccifd_options options"
Specify additional options to send to the \fIdccifd\fR\|(8) daemon. Please note that only
characters in the range [0\-9A\-Za\-z ,._/\-] are allowed for security reasons.
.Sp
The default is \f(CW\*(C`undef\*(C'\fR.
